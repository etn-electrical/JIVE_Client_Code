/**
 *****************************************************************************************
 * @file
 * @brief This file Shell_commands.h contains declarations for the test suite.
 *
 * @warning This file is automatically generated by a Python script.
 * Do not manually edit this file - any changes will be overwritten!!!
 *
 * @author CodeGenerator.py
 * @date Generated:  2016-12-23 12:55:25.372000
 * @copyright 2015 Eaton Corporation. All Rights Reserved.
 *****************************************************************************************
 */

#ifndef Shell_commands_H_
#define Shell_commands_H_

////#include "I2C_Tests.h"
// #include "MISC_Code_Tests.h"
// #include "Lib_Tests.h"
// #include "BF_Shell_Tests.h"
// #include "TimeConversion_Tests.h"
// #include "Modbus_Tests.h"
// #include "NV_ctrls_Tests.h"

/*
 * Test function prototypes.
 */
// test_status_t I2C_Simple_Class_Async_NO_DMA ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t I2C_Simple_Class_Sync_NO_DMA ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t I2C_Simple_Class_Async_DMA ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t I2C_Queued_Class_Test ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t Set_String_test_1 ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t Set_String_test_2 ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t Set_String_test_3 ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t Is_Empty_test_4 ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t Is_Full_test_5 ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t FIFO_Free_test_6 ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t test_GetVoltState_1 ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t test_GetVoltState_2 ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t test_GetVoltState_3 ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t test_GetCurrentVoltage_1 ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t Immediate_Check_test_1 ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t Feed_Dog_test_1 ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t Goto_Idle_test_2 ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t Trigger_Comm_Loss_test_3 ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t Bi_Color_LED_On_test_1 ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t Bi_Color_LED_On_test_2 ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t Bi_Color_LED_On_test_3 ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t Bi_Color_LED_Off_test ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t Bi_Color_LED_Flash_test_1 ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t Bi_Color_LED_Flash_test_2 ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t Bi_Color_LED_Flash_test_3 ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t BL_Constructor_Single_Parameter_TEST_1 ( test_command_t cmd , Shell::Shell_Base *ptr
// );
// test_status_t BL_Constructor_2_Parameters_TEST_2 ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t Bit_List_Test_TEST_3 ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t Bit_List_Test_TEST_4 ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t Bit_List_Set_TEST_5 ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t Bit_List_Dump_Single_TEST_6 ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t Bit_List_Dump_TEST_7 ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t Bit_List_Get_Next_TEST_8 ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t Bit_List_Peek_Next_TEST_9 ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t Bit_List_Is_Empty_TEST_10 ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t Bit_List_Is_Full_TEST_11 ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t Bit_List_Active_Bits_TEST_12 ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t Bit_List_Enable_Write_TEST_13 ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t BF_Shell_Examples_TEST_1 ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t BF_Shell_Examples_TEST_3 ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t TimeUtil_TEST_1 ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t TimeUtil_TEST_2 ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t TimeUtil_TEST_3 ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t TimeUtil_TEST_4 ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t TimeUtil_TEST_5 ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t TimeUtil_TEST_6 ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t TimeUtil_TEST_7 ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t TimeUtil_TEST_8 ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t TimeUtil_TEST_9 ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t TimeUtil_TEST_10 ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t TimeUtil_TEST_11 ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t TimeUtil_TEST_12 ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t TimeUtil_TEST_13 ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t TimeUtil_TEST_14 ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t TimeUtil_TEST_15 ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t TimeUtil_TEST_16 ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t TimeUtil_TEST_17 ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t TimeUtil_TEST_18 ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t TimeUtil_TEST_19 ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t TimeUtil_TEST_20 ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t TimeUtil_TEST_21 ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t TimeUtil_TEST_22 ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t DateUtil_TEST_1 ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t DateUtil_TEST_2 ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t DateUtil_TEST_3 ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t DateUtil_TEST_4 ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t DateUtil_TEST_5 ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t DateUtil_TEST_6 ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t DateUtil_TEST_7 ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t DateUtil_TEST_8 ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t DateUtil_TEST_9 ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t DateUtil_TEST_10 ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t DateUtil_TEST_11 ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t DateUtil_TEST_12 ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t DateUtil_TEST_13 ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t DateUtil_TEST_14 ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t DateUtil_TEST_15 ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t DateUtil_TEST_16 ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t DateUtil_TEST_17 ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t DateUtil_TEST_18 ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t DateUtil_TEST_19 ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t DateUtil_TEST_20 ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t DateUtil_TEST_21 ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t DateUtil_TEST_22 ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t DateUtil_TEST_23 ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t DateUtil_TEST_24 ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t DateUtil_TEST_25 ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t DateUtil_TEST_26 ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t DateUtil_TEST_27 ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t DateUtil_TEST_28 ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t POSIX_Time_Util_TEST_1 ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t POSIX_Time_Util_TEST_2 ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t Time_Zone_DST_TEST_1 ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t Time_Zone_DST_TEST_2 ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t Time_Zone_DST_TEST_3 ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t Time_Zone_DST_TEST_4 ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t Time_Zone_DST_TEST_5 ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t BF_Modbus_TEST_1 ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t Ram_NV_Write_Read_1 ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t Ram_Erase_2 ( test_command_t cmd , Shell::Shell_Base *ptr );
// test_status_t Ram_NV_Read_Checksum_3 ( test_command_t cmd , Shell::Shell_Base *ptr );

namespace Shell
{
/**
 * @brief Table of Shell commands to invoke testcases.
 */
extern Shell::Test_Base* g_shell_cmd_table_instance[];

/**
 * @brief Count of items in g_shell_cmd_table_instance[].
 */
const int32_t G_SHELL_COMMAND_TABLE_COUNT = 101;

}	/* end namespace Shell */

#endif	/* #ifndef  Shell_commands_H_  */

