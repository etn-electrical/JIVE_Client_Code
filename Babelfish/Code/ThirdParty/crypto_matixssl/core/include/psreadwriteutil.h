/**
 *      @file    psreadwriteutil.h
 *
 *
 *  Util funtion for chechking errno.
 *
 */
/*
 *      Copyright (c) 2019 INSIDE Secure Corporation
 *      All Rights Reserved
 *
 *      THIS IS UNPUBLISHED PROPRIETARY SOURCE CODE OF INSIDE.
 *
 *      Please do not edit this file without first consulting INSIDE support.
 *      Unauthorized changes to this file are not supported by INSIDE.
 *
 *      The copyright notice above does not evidence any actual or intended
 *      publication of such source code.
 *
 *      This Module contains Proprietary Information of INSIDE and should be
 *      treated as Confidential.
 *
 *      The information in this file is provided for the exclusive use of the
 *      licensees of INSIDE. Such users have the right to use, modify,
 *      and incorporate this code into products for purposes authorized by the
 *      license agreement provided they include this notice and the associated
 *      copyright notice with any such product.
 *
 *      The information in this file is provided "AS IS" without warranty.
 */
/******************************************************************************/

#ifndef INCLUDE_GUARD_PSREADWRITEUTIL_H
#define INCLUDE_GUARD_PSREADWRITEUTIL_H 1

#include "osdep_errno.h"
#include "pscompilerdep.h"

/*
    Return whether the errno passed as a parameter tells that the
    operation would block.

    @param err errno following a read or write

    @retval 1 operation would block.
    @retval 0 operation would not block.
 */
static inline int psCheckWouldBlock (int err)
{
    switch (err)
    {
# ifdef EAGAIN
        case EAGAIN:
# endif

# ifdef EWOULDBLOCK
#  ifdef EAGAIN
#   if EWOULDBLOCK != EAGAIN
        case EWOULDBLOCK:
#   endif
#  else
        case EWOULDBLOCK:
#  endif
# endif
            return 1;
        default:
            break;
    }
    return 0;
}

#endif /* INCLUDE_GUARD_PSREADWRITEUTIL_H */

/* end of psreadwriteutil.h */
