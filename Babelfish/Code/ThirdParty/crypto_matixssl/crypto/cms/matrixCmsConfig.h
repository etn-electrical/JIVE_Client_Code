/**
 *      @file    matrixCmsConfig.h
 *
 *
 *      Configuration header for MatrixCMS.
 */
/*
 *      Copyright (c) 2013-2017 INSIDE Secure Corporation
 *      All Rights Reserved
 *
 *      THIS IS UNPUBLISHED PROPRIETARY SOURCE CODE OF INSIDE.
 *
 *      Please do not edit this file without first consulting INSIDE support.
 *      Unauthorized changes to this file are not supported by INSIDE.
 *
 *      The copyright notice above does not evidence any actual or intended
 *      publication of such source code.
 *
 *      This Module contains Proprietary Information of INSIDE and should be
 *      treated as Confidential.
 *
 *      The information in this file is provided for the exclusive use of the
 *      licensees of INSIDE. Such users have the right to use, modify,
 *      and incorporate this code into products for purposes authorized by the
 *      license agreement provided they include this notice and the associated
 *      copyright notice with any such product.
 *
 *      The information in this file is provided "AS IS" without warranty.
 */
/******************************************************************************/

/* Two different API families for creation and parsing of each supported type */


/******************************************************************************/
/* Signed-Data Content Type - RFC 5652 */

/* Atomic one-pass encoding and decoding. */
#define USE_MCMS_ATOMIC_SD_CREATE
#define USE_MCMS_ATOMIC_SD_PARSE

/*      Stream encoding and decoding for SD with large attached plaintext */
/* #define USE_MCMS_STREAMING_SD_CREATE */
/* #define USE_MCMS_STREAMING_SD_PARSE */

/******************************************************************************/
/* Authenticated-Enveloped-Data Content Type - RFC 5083 */

/* Atomic one-pass encoding and decoding. */
#define USE_MCMS_ATOMIC_AED_CREATE
#define USE_MCMS_ATOMIC_AED_PARSE

/*      Stream encoding and decoding for AED */
/* #define USE_MCMS_STREAMING_AED_CREATE */
/* #define USE_MCMS_STREAMING_AED_PARSE */

/* Empty authenticated attributes must be enabled if stream parsing AED with
    AES_GCM.  This is because the authenticated data must be available to
    initailize the cipher but it appears after the data in the ASN.1.
    For CMAC, this limitation doesn't exist but there is conflicting
    information between the RFC and application specific usages so best to just
    leave it empty for that mode as well */
#define MCMS_EMPTY_AED_AUTH_ATTRIBS

/* Sets the IV for AES_CBC_CMAC to be 16 bytes of 0x0 and excludes the
    "parameters" from the OID ASN.1 for this algorithm */
#define MCMS_EMPTY_CBC_CMAC_PARAMS

/* This RFC describes how MAC encryption should be handled in CMS.  It details
    how the encryption and mac keys should be derived and which data and in
    what order the MAC should be generated.  Some CMS implmentations have
    defined their own mechanisms for this so don't include this overhead if
    not a standard implementation */
/* NOTE: This has not been completely implmented and tested yet */
/* #define USE_RFC_6476 */


/******************************************************************************/
/* Compressed-Data Content Type - RFC 3274 - Requires zlib */

/* Atomic one-pass encoding and decoding. */
#define USE_MCMS_ATOMIC_CD_CREATE
#define USE_MCMS_ATOMIC_CD_PARSE

/*      Stream encoding and decoding for CD */
/* #define USE_MCMS_STREAMING_CD_CREATE */
/* #define USE_MCMS_STREAMING_CD_PARSE */

/******************************************************************************/

