Attribute VB_Name = "Delta_Com_Remote_Parameter_List"
'**************************
'**************************
'Delta Com Parameter List Construction sheet.
'**************************
'**************************
Sub Create_Delta_Com_Remote_Parameter_List()

'*********************
'******     Constants
'*********************
    Application.Calculation = xlCalculationManual
    
    Dim file_name As String
    Dim starting_file_name As String
    Dim file_dest_path As String
    Dim lower_case_file_name As String
    Dim upper_case_file_name As String
    Dim sheet_name As String
    Dim BEGIN_IGNORED_DATA As String
    BEGIN_IGNORED_DATA = "BEGIN_IGNORED_DATA"
    
    Dim data_dec_str As String
    Dim def_comma_string As String
    Dim def_comma_count As Integer
    Dim def_paren_string As String
    Dim def_paren_count As Integer

    Dim total_init_values As Integer
    
    starting_file_name = ActiveWorkbook.name
    
    file_dest_path = Worksheets("DCI Descriptors").Range("A1").Cells(1, 2).text
    file_dest_path = ActiveWorkbook.Path & "\" & file_dest_path

    MPL_DATA_START_ROW = 9
    
    MPL_DESCRIP_COL = 1
    MPL_DATA_DEFINE_COL = 2
    MPL_DATA_ID_COL = 3
    MPL_DATA_ID_HEX_COL = 4

    ' The namespace associated with the generated data.  This will reference the Usage Notes page.  If usage notes is not filled in with the
    ' namespace then a default one will be assigned (Gen_Data::)
    Dim gen_data_namespace As String
    gen_data_namespace = Get_Gen_Data_Namespace()

'*********************
'******     Begin
'*********************
    
    workbook_file_name = Worksheets("Delta Com Parameters").Range("A1").Cells(6, 2).text
    Set work_book = Workbooks(workbook_file_name)
    
    If work_book Is Nothing Then
        file_path = ActiveWorkbook.Path & "\" & Worksheets("DCI Descriptors").Range("A1").Cells(5, 2).text & workbook_file_name
        Workbooks.Open (file_path)
    End If
    Workbooks(workbook_file_name).Activate
    
    Application.Wait (Now + TimeValue("0:00:01"))
 
    sheet_name = "Dcom Parameters"
    Sheets(sheet_name).Select
    
    file_name = Cells(1, 2).text
    h_file_name = Cells(2, 2).text
    Set fs = CreateObject("Scripting.FileSystemObject")
    file_dest_path = file_dest_path & h_file_name
    Set FILE_DCI_H = fs.CreateTextFile(file_dest_path, True)
    lower_case_file_name = LCase(file_name)
    upper_case_file_name = UCase(file_name)


'****************************************************************************************************************************
'******     Start Creating the .H file header
'****************************************************************************************************************************
    FILE_DCI_H.WriteLine ("/**")
    FILE_DCI_H.WriteLine ("*****************************************************************************************")
    FILE_DCI_H.WriteLine ("*   @file")
    FILE_DCI_H.WriteLine ("*")
    FILE_DCI_H.WriteLine ("*   @brief Provides the shared parameter listing.")
    FILE_DCI_H.WriteLine ("*")
    FILE_DCI_H.WriteLine ("*   @details The product should use this shared list of general parameters for deltacom")
    FILE_DCI_H.WriteLine ("*   exchange.  This file is automatically generated by a spreadsheet macro.")
    FILE_DCI_H.WriteLine ("*")
    FILE_DCI_H.WriteLine ("*   @version")
    FILE_DCI_H.WriteLine ("*   C++ Style Guide Version 1.0")
    FILE_DCI_H.WriteLine ("*")
    FILE_DCI_H.WriteLine ("*   @copyright " & Get_Year() & " Eaton Corporation. All Rights Reserved.")
    FILE_DCI_H.WriteLine ("*")
    FILE_DCI_H.WriteLine ("*****************************************************************************************")
    FILE_DCI_H.WriteLine ("*/")
    FILE_DCI_H.WriteLine ("#ifndef " & upper_case_file_name & "_H")
    FILE_DCI_H.WriteLine ("  #define " & upper_case_file_name & "_H")
    FILE_DCI_H.WriteLine ("")
    FILE_DCI_H.WriteLine ("")
    

'****************************************************************************************************************************
'******     Gotta calculate the total number of Parameters we are going to create.
'****************************************************************************************************************************
    num_ids = 0
    counter = MPL_DATA_START_ROW
    While (Cells(counter, MPL_DATA_DEFINE_COL).value <> Empty) And (Cells(counter, MPL_DATA_DEFINE_COL).value <> BEGIN_IGNORED_DATA)
        Cells(counter, MPL_DATA_ID_HEX_COL).value = "0x" & Param_Hexify(Cells(counter, MPL_DATA_ID_COL).value, 2)
        num_ids = num_ids + 1
        counter = counter + 1
    Wend
    
'****************************************************************************************************************************
'******     Gotta sort the data by what needs to be monitored and what doesn't need to be.
'****************************************************************************************************************************
    Dim range_string As String
    range_string = MPL_DATA_START_ROW & ":" & (num_ids + MPL_DATA_START_ROW)
    Rows(range_string).Sort Key1:=Range("C9"), Order1:=xlAscending, _
        Header:=xlGuess, OrderCustom:=1, MatchCase:=False, _
        Orientation:=xlTopToBottom
  
    FILE_DCI_H.WriteLine ("//*******************************************************")
    FILE_DCI_H.WriteLine ("//******     Parameter List.")
    FILE_DCI_H.WriteLine ("//*******************************************************")
    FILE_DCI_H.WriteLine ("namespace " & gen_data_namespace)
    FILE_DCI_H.WriteLine ("{")
    FILE_DCI_H.WriteLine ("")
    FILE_DCI_H.WriteLine (Chr(9) & "typedef uint16_t mpl_t;")
    FILE_DCI_H.WriteLine ("")
    
    counter = MPL_DATA_START_ROW
    While (Cells(counter, MPL_DATA_DEFINE_COL).value <> Empty) And (Cells(counter, MPL_DATA_DEFINE_COL).value <> BEGIN_IGNORED_DATA)
        FILE_DCI_H.WriteLine (Chr(9) & "static const mpl_t " & _
            Cells(counter, DCI_DEFINES_COL).value & "_PID = " & Cells(counter, MPL_DATA_ID_COL).value & "U;")
        counter = counter + 1
    Wend

    FILE_DCI_H.WriteLine ("")
    FILE_DCI_H.WriteLine (Chr(9) & "static const mpl_t MPL_PARAM_TABLE_SIZE = " & (counter - MPL_DATA_START_ROW) & "U;")
    FILE_DCI_H.WriteLine ("")
    FILE_DCI_H.WriteLine ("}")
    FILE_DCI_H.WriteLine ("#endif")
    
    FILE_DCI_H.Close
    
    'Let's go back to the source sheet instead of sticking around in the parameter sheet.
    Workbooks(starting_file_name).Activate

    Application.Calculation = xlCalculationAutomatic
    
End Sub

'****************************************************************
'****************************************************************
'****************************************************************
'****************************************************************
'*    FUNCTION HEADER
'****************************************************************
'****************************************************************
'****************************************************************
'****************************************************************
Public Function Param_Hexify(num_to_hex As Long, bytes As Integer) As String
    
    If (bytes = 4) Then
        If (num_to_hex < 16) Then
            Param_Hexify = "0000000" & Hex(num_to_hex)
        ElseIf (num_to_hex < 256) Then
            Param_Hexify = "000000" & Hex(num_to_hex)
        ElseIf (num_to_hex < 4096) Then
            Param_Hexify = "00000" & Hex(num_to_hex)
        ElseIf (num_to_hex < 65536) Then
            Param_Hexify = "0000" & Hex(num_to_hex)
        ElseIf (num_to_hex < 1048576) Then
            Param_Hexify = "000" & Hex(num_to_hex)
        ElseIf (num_to_hex < 16777216) Then
            Param_Hexify = "00" & Hex(num_to_hex)
        ElseIf (num_to_hex < 268435456) Then
            Param_Hexify = "0" & Hex(num_to_hex)
        Else
            Param_Hexify = Hex(num_to_hex)
        End If
    ElseIf (bytes = 2) Then
        If (num_to_hex < 16) Then
            Param_Hexify = "000" & Hex(num_to_hex)
        ElseIf (num_to_hex < 256) Then
            Param_Hexify = "00" & Hex(num_to_hex)
        ElseIf (num_to_hex < 4096) Then
            Param_Hexify = "0" & Hex(num_to_hex)
        Else
            Param_Hexify = Hex(num_to_hex)
        End If
    ElseIf (bytes = 1) Then
        If (num_to_hex < 16) Then
            Param_Hexify = "0" & Hex(num_to_hex)
        Else
            Param_Hexify = Hex(num_to_hex)
        End If
    Else
        Param_Hexify = Hex(num_to_hex)
    End If
End Function







