/**
 *      @file    interactiveCommon.h
 *
 *
 *      Common parts of interactiveClient.c and interactiveServer.c
 */
/*
 *      Copyright (c) 2019 INSIDE Secure Corporation
 *      All Rights Reserved
 *
 *      THIS IS UNPUBLISHED PROPRIETARY SOURCE CODE OF INSIDE.
 *
 *      Please do not edit this file without first consulting INSIDE support.
 *      Unauthorized changes to this file are not supported by INSIDE.
 *
 *      The copyright notice above does not evidence any actual or intended
 *      publication of such source code.
 *
 *      This Module contains Proprietary Information of INSIDE and should be
 *      treated as Confidential.
 *
 *      The information in this file is provided for the exclusive use of the
 *      licensees of INSIDE. Such users have the right to use, modify,
 *      and incorporate this code into products for purposes authorized by the
 *      license agreement provided they include this notice and the associated
 *      copyright notice with any such product.
 *
 *      The information in this file is provided "AS IS" without warranty.
 */

int get_user_input(char *buf, int buf_len);
int get_user_input_char(char *c, char defaultChoice);
int32_t getAppDataFromUser(ssl_t *ssl,
        unsigned char *data,
        size_t *dataLen);
int32_t askSendAppData(ssl_t *ssl);
psRes_t getUserProtocolVersion(psProtocolVersion_t *verOut);
psRes_t getUserKeyPair(const unsigned char **cert,
        int32_t *certLen,
        const unsigned char **key,
        int32_t *keyLen,
        int32_t *keyType,
        int32_t *pskLen);
int load_keys(sslKeys_t *keys);
psRes_t getEncodingFunc(void);
psRes_t getUserSigAlgs(uint16_t *sigAlgs, psSize_t *numSigAlgs);
psRes_t getUserCiphersuites(psCipher16_t *ciphersuites,
        psSize_t *numCiphersuites);
psRes_t getMaximumFragmentLength(short *maxFragLen);
psRes_t getServerAddress(char *addr_out, int *addr_out_len);
psRes_t getServerPort(int *port_out);
psRes_t getServerName(
        char *name_out,
        int name_out_len,
        char *ip_addr);
psRes_t getAllowAnon(psBool_t *allow);
psRes_t getUserFirstSender(void);
